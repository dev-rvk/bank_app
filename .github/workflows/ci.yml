# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci-test

# Define triggers, which are push to master branch or if there is a Pull Request in master branch
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  
  # job 1
  test:
    runs-on: ubuntu-latest # Runner info

    # Service containers to run with `test`
    services:
        # Label used to access the service container
        postgres:
          # Docker Hub image
          image: postgres
          # Provide the password for postgres
          env:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: simple_bank
          # Set health checks to wait until postgres has started
          options: >-
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5
          ports:
            - 5432:5432

    # Step 1 to checkout the code of this repo
    steps:
    - uses: actions/checkout@v4
      
    # Step 2 to install go on the runner
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Install golang-migrate
      run: |
        go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
        which migrate
        
    - name: Migrate
      run: make migrateup

    - name: Test
      run: make test
